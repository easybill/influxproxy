name: CI
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build rust ${{ matrix.platform.target }}/${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          # mac target
          - { os: 'macos-latest', target: 'x86_64-apple-darwin', arch: 'x86_64', osn: 'mac' }
          - { os: 'macos-latest', target: 'aarch64-apple-darwin', arch: 'aarch64', osn: 'mac' }
          # linux target
          - { os: 'ubuntu-latest', target: 'x86_64-unknown-linux-musl', arch: 'x86_64', osn: 'ubuntu-latest' }
          - { os: 'ubuntu-latest', target: 'aarch64-unknown-linux-musl', arch: 'aarch64', osn: 'ubuntu-latest' }
    steps:
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.platform.target }} --bin influxproxy
      - name: mv artifacts
        run: |
          mkdir -p artifact
          mv target/${{ matrix.platform.target }}/release/influxproxy artifact/influxproxy_${{ matrix.platform.osn }}_${{ matrix.platform.arch }}
      - name: Prepare output artifact for next step
        uses: actions/upload-artifact@v3
        with:
          name: influxproxy_${{ matrix.platform.osn }}_${{ matrix.platform.arch }}
          path: artifact/influxproxy_${{ matrix.platform.osn }}_${{ matrix.platform.arch }}

  release:
    runs-on: 'ubuntu-latest'
    needs: [ "build" ]
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          path: binaries
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            binaries/*/*

  release_docker:
    runs-on: 'ubuntu-latest'
    needs: [ "build" ]
    steps:
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: download artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/download-artifact@v3
        with:
          path: binaries
      - uses: docker/setup-buildx-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        id: buildx
        with:
          install: true
      - name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          ls binaries
          ls binaries/influxproxy_ubuntu-latest_x86_64
          cp binaries/influxproxy_ubuntu-latest_x86_64/influxproxy_ubuntu-latest_x86_64 influxproxy
          docker buildx build --platform linux/amd64 -t easybill/influxproxy:${{ steps.vars.outputs.tag }}_amd64 --push .
          cp binaries/influxproxy_ubuntu-latest_aarch64/influxproxy_ubuntu-latest_aarch64 influxproxy
          docker buildx build --platform linux/arm64 -t easybill/influxproxy:${{ steps.vars.outputs.tag }}_arm64 --push .
          docker manifest create easybill/influxproxy:${{ steps.vars.outputs.tag }} easybill/influxproxy:${{ steps.vars.outputs.tag }}_amd64 easybill/influxproxy:${{ steps.vars.outputs.tag }}_arm64
          docker manifest push easybill/influxproxy:${{ steps.vars.outputs.tag }}
      -
        name: Build and push release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker manifest create easybill/influxproxy:${{ steps.vars.outputs.tag }} easybill/influxproxy:latest_amd64 easybill/influxproxy:latest_arm64
          docker manifest push easybill/influxproxy:${{ steps.vars.outputs.tag }}